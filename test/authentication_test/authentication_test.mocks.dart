// Mocks generated by Mockito 5.2.0 from annotations
// in neoroo_app/test/authentication_test/authentication_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:flutter/cupertino.dart' as _i6;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:neoroo_app/models/profile.dart' as _i3;
import 'package:neoroo_app/network/authentication_client.dart' as _i5;
import 'package:neoroo_app/repository/authentication_repository.dart' as _i8;
import 'package:neoroo_app/repository/hive_storage_repository.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeResponse_0 extends _i1.Fake implements _i2.Response {}

class _FakeProfile_1 extends _i1.Fake implements _i3.Profile {}

class _FakeHiveStorageRepository_2 extends _i1.Fake
    implements _i4.HiveStorageRepository {}

class _FakeAuthenticationClient_3 extends _i1.Fake
    implements _i5.AuthenticationClient {}

class _FakeBuildContext_4 extends _i1.Fake implements _i6.BuildContext {}

/// A class which mocks [AuthenticationClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationClient extends _i1.Mock
    implements _i5.AuthenticationClient {
  MockAuthenticationClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Response> loginUser(
          String? username, String? password, String? serverURL) =>
      (super.noSuchMethod(
              Invocation.method(#loginUser, [username, password, serverURL]),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i7.Future<_i2.Response>);
  @override
  _i7.Future<_i2.Response> getOrganisationName(
          String? id, String? username, String? password, String? serverURL) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getOrganisationName, [id, username, password, serverURL]),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i7.Future<_i2.Response>);
}

/// A class which mocks [HiveStorageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveStorageRepository extends _i1.Mock
    implements _i4.HiveStorageRepository {
  MockHiveStorageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> saveUserProfile(_i3.Profile? profile) =>
      (super.noSuchMethod(Invocation.method(#saveUserProfile, [profile]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<_i3.Profile> getUserProfile() =>
      (super.noSuchMethod(Invocation.method(#getUserProfile, []),
              returnValue: Future<_i3.Profile>.value(_FakeProfile_1()))
          as _i7.Future<_i3.Profile>);
  @override
  _i7.Future<void> saveOrganisationURL(String? url) =>
      (super.noSuchMethod(Invocation.method(#saveOrganisationURL, [url]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<String> getOrganisationURL() =>
      (super.noSuchMethod(Invocation.method(#getOrganisationURL, []),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<void> saveCredentials(String? username, String? password,
          String? serverURL, String? avatarId, String? name) =>
      (super.noSuchMethod(
          Invocation.method(#saveCredentials,
              [username, password, serverURL, avatarId, name]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<Map<String, List<String>>> getSavedCredentials() =>
      (super.noSuchMethod(Invocation.method(#getSavedCredentials, []),
              returnValue: Future<Map<String, List<String>>>.value(
                  <String, List<String>>{}))
          as _i7.Future<Map<String, List<String>>>);
  @override
  _i7.Future<void> saveOrganisations(List<String>? organisationList) => (super
      .noSuchMethod(Invocation.method(#saveOrganisations, [organisationList]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<List<String>> getSavedOrganisations() =>
      (super.noSuchMethod(Invocation.method(#getSavedOrganisations, []),
              returnValue: Future<List<String>>.value(<String>[]))
          as _i7.Future<List<String>>);
  @override
  _i7.Future<void> saveSelectedOrganisation(String? id) =>
      (super.noSuchMethod(Invocation.method(#saveSelectedOrganisation, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<String> getSelectedOrganisation() =>
      (super.noSuchMethod(Invocation.method(#getSelectedOrganisation, []),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<void> setIsCareGiver(bool? isCareGiver) =>
      (super.noSuchMethod(Invocation.method(#setIsCareGiver, [isCareGiver]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<bool> getIsCareGiver() =>
      (super.noSuchMethod(Invocation.method(#getIsCareGiver, []),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<void> setUserGroups(List<String>? userGroups) =>
      (super.noSuchMethod(Invocation.method(#setUserGroups, [userGroups]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<List<String>> getUserGroups() =>
      (super.noSuchMethod(Invocation.method(#getUserGroups, []),
              returnValue: Future<List<String>>.value(<String>[]))
          as _i7.Future<List<String>>);
  @override
  _i7.Future<void> logOutUser() =>
      (super.noSuchMethod(Invocation.method(#logOutUser, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
}

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i8.AuthenticationRepository {
  MockAuthenticationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.HiveStorageRepository get hiveStorageRepository =>
      (super.noSuchMethod(Invocation.getter(#hiveStorageRepository),
              returnValue: _FakeHiveStorageRepository_2())
          as _i4.HiveStorageRepository);
  @override
  _i5.AuthenticationClient get authenticationClient => (super.noSuchMethod(
      Invocation.getter(#authenticationClient),
      returnValue: _FakeAuthenticationClient_3()) as _i5.AuthenticationClient);
  @override
  _i6.BuildContext get context =>
      (super.noSuchMethod(Invocation.getter(#context),
          returnValue: _FakeBuildContext_4()) as _i6.BuildContext);
  @override
  _i7.Future<dynamic> loginUser(
          String? username, String? password, String? serverURL) =>
      (super.noSuchMethod(
          Invocation.method(#loginUser, [username, password, serverURL]),
          returnValue: Future<dynamic>.value()) as _i7.Future<dynamic>);
  @override
  _i7.Future<dynamic> getOrganisationListDetails() =>
      (super.noSuchMethod(Invocation.method(#getOrganisationListDetails, []),
          returnValue: Future<dynamic>.value()) as _i7.Future<dynamic>);
  @override
  _i7.Future<dynamic> selectOrganisation(String? id) =>
      (super.noSuchMethod(Invocation.method(#selectOrganisation, [id]),
          returnValue: Future<dynamic>.value()) as _i7.Future<dynamic>);
  @override
  _i7.Future<Map<String, dynamic>> isLocalAuthSupported() =>
      (super.noSuchMethod(Invocation.method(#isLocalAuthSupported, []),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i7.Future<Map<String, dynamic>>);
  @override
  _i7.Future<Map<String, dynamic>> getSavedCredentials() => (super.noSuchMethod(
          Invocation.method(#getSavedCredentials, []),
          returnValue: Future<Map<String, dynamic>>.value(<String, dynamic>{}))
      as _i7.Future<Map<String, dynamic>>);
}
